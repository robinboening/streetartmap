StreetartMap.directive 'map', [ "$location", "leafletEvents", "leafletData", "Location", "$routeParams", "markerLocation", ($location, leafletEvents, leafletData, Location, $routeParams, markerLocation) ->
  return {
    restrict: 'A'
    templateUrl: 'angular/templates/map.html'

    link:
      pre: (scope) ->
        angular.extend scope,
          tiles:
            url: 'https://tiles.lyrk.org/ls/{z}/{x}/{y}?apikey={apikey}'
            options:
              apikey: 'ad096084a0a5478bada572b547d2cac2'
              attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, Tiles by <a href="http://geodienste.lyrk.de/">Lyrk</a>'
          center:
            zoom: 2
            lat: 52.52000659999999
            lng: 13.404954
          defaults:
            scrollWheelZoom: false
          markers: []
          events:
            markers:
              enable: leafletEvents.getAvailableMarkerEvents()

      post: (scope, element) ->
        if $location.path() == '/locations/new'
          scope.center = {
            lat: null
            lng: null
            autoDiscover: true
          }

          scope.$on "leafletDirectiveMap.click", (event, args) ->
            leafEvent = args.leafletEvent
            scope.location = {
              latitude: leafEvent.latlng.lat
              longitude: leafEvent.latlng.lng
            }

            scope.markers['0'] = {
              lat: scope.location['latitude'],
              lng: scope.location['longitude'],
              message: "New location"
              focus: true
            }

            scope.createLocation()
        else
          markerLocation.query().then (locations) ->
            $(locations).each (index, location) ->
              thumb = ''
              thumb = "<img src='#{location['thumbnail']}'>" if location['thumbnail']
              scope.markers["#{location['id']}"] = {
                lat: location['latitude'],
                lng: location['longitude'],
                focus: ("#{$routeParams.id}" == "#{location['id']}")
                message: "#{thumb}<p>#{location['fullAddress']}</p>"
              }
              if location['id'] == parseInt($routeParams.id, 10)
                scope.center = {
                  lat: location['latitude']
                  lng: location['longitude']
                }
                leafletData.getMap().then (map) ->
                  map.fitBounds([[location['latitude'], location['longitude']]])

            scope.center['autoDiscover'] = true unless $routeParams.id
            scope.center['zoom'] = 16

          scope.$on 'leafletDirectiveMarker.mouseover', (event, args) ->
            scope.hovered_marker = args.markerName

          scope.$on 'leafletDirectiveMarker.mouseout', (event, args) ->
            scope.hovered_marker = false

          scope.$on 'leafletDirectiveMarker.popupopen', (event, args) ->
            Location.get(args.markerName).then (location) ->
              scope.location = location
              $location.path "/locations/#{location.id}"

          scope.$on 'leafletDirectiveMarker.popupclose', (event, args) ->
            $location.path "/"
    }
]
